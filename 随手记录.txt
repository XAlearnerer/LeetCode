
23
记录一下 k n的取值
while (n > 1) {
	int k = (n + 1) / 2;
	for (int i = 0; i < n / 2; ++i) {}
}

0 1 2 3 4 5  -> 0 1 2  -> 0 1  -> 0
0 1 2 3 4  -> 0 1 2 -> 0 1  -> 0

///////////////////////////////////////////////////////

76  SlidingWindow
	
 错误：	//vector<char> v(256, 0); 
 正确：	vector<int> v(256, 0);

///////////////////////////////////////////////////////

95
NULL 与 nullptr 的区别?
if (left > right)
	return { NULL };
//  return { nullptr }; Worng


///////////////////////////////////////////////////////

141 
快慢指针

///////////////////////////////////////////////////////

218
pair sort排序

//sort(v.begin(),v.end(),[](pair<int,int> a,pair<int,int> b){ return a.first<b.first;});
sort(v.begin(),v.end());  /////这里 pair的默认排序应该是 first先，若first大小一致，则按second排序

template<class _T1, class _T2>
    inline bool
    operator<(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
    { return __x.first < __y.first
             || (!(__y.first < __x.first) && __x.second < __y.second); }

///////////////////////////////////////////////////////

230

对数据结构的改进

Solution3 的设计，值得再看看

///////////////////////////////////////////////////////

236
递归的使用


///////////////////////////////////////////////////////

373
返回一个升序输出
priority_queue<int, vector<int>, greater<int> > q;
        for( int i= 0; i< 10; ++i ) q.push(10-i);
        while( !q.empty() ){
             cout << q.top() << endl;
             q.pop();
        }

///////////////////////////////////////////////////////

374 DP

//int mid = (left + right) / 2;
	上式越界时，可以考虑：
int mid= (right - left) / 2 + left;

///////////////////////////////////////////////////////


375 DP
极小极大原则
啧啧啧


///////////////////////////////////////////////////////

424 SlidingWindow

		159 340 付费问题


///////////////////////////////////////////////////////

449.
sstream

stringstream 的使用

	if (val == "#") return NULL;
				注意：：不能是 val == "# "
	TreeNode* cur = new TreeNode(stoi(val));



///////////////////////////////////////////////////////


451
string::append() 添加文本
    auto t=q.top();
    res.append(t.first, t.second);
//            char t=q.top().second;
//            int n=q.top().first;
//            for(int i=0;i!=n;++i)
//                res+=t;

///////////////////////////////////////////////////////

617
递归的设计

///////////////////////////////////////////////////////

698
使用 sort 后会超时。。。。。
[4,5,3,2,5,5,5,1,5,5,5,5,3,5,5,2]
13

///////////////////////////////////////////////////////

765  unionfind
if (m != n)
{
	root[m] = n;
	++res;  //?  这里没想通
}


///////////////////////////////////////////////////////

1035
The Longest Common Subsequence